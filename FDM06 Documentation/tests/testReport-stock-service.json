{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":2,"numPassedTests":45,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":2,"numTotalTests":45,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1646837663242,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["validateSymbol"],"failureMessages":[],"fullName":"validateSymbol should return the given symbol when symbol is 2 characters","location":null,"status":"passed","title":"should return the given symbol when symbol is 2 characters"},{"ancestorTitles":["validateSymbol"],"failureMessages":[],"fullName":"validateSymbol should return the given symbol when symbol is 3 characters","location":null,"status":"passed","title":"should return the given symbol when symbol is 3 characters"},{"ancestorTitles":["validateSymbol"],"failureMessages":[],"fullName":"validateSymbol should return the given symbol when symbol is 4 characters","location":null,"status":"passed","title":"should return the given symbol when symbol is 4 characters"},{"ancestorTitles":["validateSymbol"],"failureMessages":[],"fullName":"validateSymbol should return a trimmed version of the given symbol when whitespace is included","location":null,"status":"passed","title":"should return a trimmed version of the given symbol when whitespace is included"},{"ancestorTitles":["validateSymbol"],"failureMessages":[],"fullName":"validateSymbol should evaluate as false symbol when symbol is too long","location":null,"status":"passed","title":"should evaluate as false symbol when symbol is too long"},{"ancestorTitles":["validateSymbol"],"failureMessages":[],"fullName":"validateSymbol should evaluate as false when symbol is alphanumeric","location":null,"status":"passed","title":"should evaluate as false when symbol is alphanumeric"},{"ancestorTitles":["validateSymbol"],"failureMessages":[],"fullName":"validateSymbol should evaluate as false when symbol is numeric","location":null,"status":"passed","title":"should evaluate as false when symbol is numeric"},{"ancestorTitles":["validateSymbol"],"failureMessages":[],"fullName":"validateSymbol should evaluate as false when symbol contains special characters","location":null,"status":"passed","title":"should evaluate as false when symbol contains special characters"},{"ancestorTitles":["validateSymbol"],"failureMessages":[],"fullName":"validateSymbol should evaluate as false when symbol contains special characters only","location":null,"status":"passed","title":"should evaluate as false when symbol contains special characters only"},{"ancestorTitles":["validateSymbol"],"failureMessages":[],"fullName":"validateSymbol should evaluate as false when symbol is empty string","location":null,"status":"passed","title":"should evaluate as false when symbol is empty string"},{"ancestorTitles":["validateSymbol"],"failureMessages":[],"fullName":"validateSymbol should evaluate as false when symbol is whitespace string","location":null,"status":"passed","title":"should evaluate as false when symbol is whitespace string"},{"ancestorTitles":["validateSymbol"],"failureMessages":[],"fullName":"validateSymbol should evaluate as false when symbol is undefined","location":null,"status":"passed","title":"should evaluate as false when symbol is undefined"},{"ancestorTitles":["validateCompany"],"failureMessages":[],"fullName":"validateCompany should return the given company when company is 2 characters","location":null,"status":"passed","title":"should return the given company when company is 2 characters"},{"ancestorTitles":["validateCompany"],"failureMessages":[],"fullName":"validateCompany should return the given company when company is 16 characters","location":null,"status":"passed","title":"should return the given company when company is 16 characters"},{"ancestorTitles":["validateCompany"],"failureMessages":[],"fullName":"validateCompany should return a trimmed version of the given company when whitespace is included","location":null,"status":"passed","title":"should return a trimmed version of the given company when whitespace is included"},{"ancestorTitles":["validateCompany"],"failureMessages":[],"fullName":"validateCompany should evaluate as false company when company is too long","location":null,"status":"passed","title":"should evaluate as false company when company is too long"},{"ancestorTitles":["validateCompany"],"failureMessages":[],"fullName":"validateCompany should evaluate as false when company is too short","location":null,"status":"passed","title":"should evaluate as false when company is too short"},{"ancestorTitles":["validateCompany"],"failureMessages":[],"fullName":"validateCompany should evaluate as false when company is alphanumeric","location":null,"status":"passed","title":"should evaluate as false when company is alphanumeric"},{"ancestorTitles":["validateCompany"],"failureMessages":[],"fullName":"validateCompany should evaluate as false when company is numeric","location":null,"status":"passed","title":"should evaluate as false when company is numeric"},{"ancestorTitles":["validateCompany"],"failureMessages":[],"fullName":"validateCompany should evaluate as false when company contains special characters","location":null,"status":"passed","title":"should evaluate as false when company contains special characters"},{"ancestorTitles":["validateCompany"],"failureMessages":[],"fullName":"validateCompany should evaluate as false when company contains special characters only","location":null,"status":"passed","title":"should evaluate as false when company contains special characters only"},{"ancestorTitles":["validateCompany"],"failureMessages":[],"fullName":"validateCompany should evaluate as false when company is empty string","location":null,"status":"passed","title":"should evaluate as false when company is empty string"},{"ancestorTitles":["validateCompany"],"failureMessages":[],"fullName":"validateCompany should evaluate as false when company is whitespace string","location":null,"status":"passed","title":"should evaluate as false when company is whitespace string"},{"ancestorTitles":["validateCompany"],"failureMessages":[],"fullName":"validateCompany should evaluate as false when company is undefined","location":null,"status":"passed","title":"should evaluate as false when company is undefined"}],"endTime":1646837664813,"message":"","name":"D:\\src\\FDM06\\stock-service\\src\\data\\validation.test.js","startTime":1646837663850,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["stock"],"failureMessages":[],"fullName":"stock should return status 200 when getStockData and getPriceData succeed","location":null,"status":"passed","title":"should return status 200 when getStockData and getPriceData succeed"},{"ancestorTitles":["stock"],"failureMessages":[],"fullName":"stock should return body of company details and prices when getStockData and getPriceData succeed","location":null,"status":"passed","title":"should return body of company details and prices when getStockData and getPriceData succeed"},{"ancestorTitles":["stock"],"failureMessages":[],"fullName":"stock should return status 404 when getStockData fails","location":null,"status":"passed","title":"should return status 404 when getStockData fails"},{"ancestorTitles":["stock"],"failureMessages":[],"fullName":"stock should return status 200 when getPriceData fails","location":null,"status":"passed","title":"should return status 200 when getPriceData fails"},{"ancestorTitles":["stock"],"failureMessages":[],"fullName":"stock should return body of company details when getStockData succeeds and getPriceData fails","location":null,"status":"passed","title":"should return body of company details when getStockData succeeds and getPriceData fails"},{"ancestorTitles":["companies"],"failureMessages":[],"fullName":"companies should return status 200 when getCompanySymbols succeeds","location":null,"status":"passed","title":"should return status 200 when getCompanySymbols succeeds"},{"ancestorTitles":["companies"],"failureMessages":[],"fullName":"companies should return body of a list of symbols when getCompanySymbols succeeds","location":null,"status":"passed","title":"should return body of a list of symbols when getCompanySymbols succeeds"},{"ancestorTitles":["companies"],"failureMessages":[],"fullName":"companies should return status 404 when getCompanySymbols returns null","location":null,"status":"passed","title":"should return status 404 when getCompanySymbols returns null"},{"ancestorTitles":["companies"],"failureMessages":[],"fullName":"companies should return status 404 when getCompanySymbols returns empty list","location":null,"status":"passed","title":"should return status 404 when getCompanySymbols returns empty list"},{"ancestorTitles":["addCompany"],"failureMessages":[],"fullName":"addCompany should return status 200 when createStock succeeds","location":null,"status":"passed","title":"should return status 200 when createStock succeeds"},{"ancestorTitles":["addCompany"],"failureMessages":[],"fullName":"addCompany should return body of stock model when createStock succeeds","location":null,"status":"passed","title":"should return body of stock model when createStock succeeds"},{"ancestorTitles":["addCompany"],"failureMessages":[],"fullName":"addCompany should return status 400 when validateSymbol fails","location":null,"status":"passed","title":"should return status 400 when validateSymbol fails"},{"ancestorTitles":["addCompany"],"failureMessages":[],"fullName":"addCompany should return status 400 when validateCompany fails","location":null,"status":"passed","title":"should return status 400 when validateCompany fails"},{"ancestorTitles":["addCompany"],"failureMessages":[],"fullName":"addCompany should return status 409 when createStock fails","location":null,"status":"passed","title":"should return status 409 when createStock fails"},{"ancestorTitles":["editCompany"],"failureMessages":[],"fullName":"editCompany should return status 200 when editStock succeeds","location":null,"status":"passed","title":"should return status 200 when editStock succeeds"},{"ancestorTitles":["editCompany"],"failureMessages":[],"fullName":"editCompany should return body of stock model when editStock succeeds","location":null,"status":"passed","title":"should return body of stock model when editStock succeeds"},{"ancestorTitles":["editCompany"],"failureMessages":[],"fullName":"editCompany should return status 400 when validateCompany fails","location":null,"status":"passed","title":"should return status 400 when validateCompany fails"},{"ancestorTitles":["editCompany"],"failureMessages":[],"fullName":"editCompany should return status 404 when editStock fails","location":null,"status":"passed","title":"should return status 404 when editStock fails"},{"ancestorTitles":["deleteCompany"],"failureMessages":[],"fullName":"deleteCompany should return status 200 when removeStock succeeds","location":null,"status":"passed","title":"should return status 200 when removeStock succeeds"},{"ancestorTitles":["deleteCompany"],"failureMessages":[],"fullName":"deleteCompany should return body of stock model when removeStock succeeds","location":null,"status":"passed","title":"should return body of stock model when removeStock succeeds"},{"ancestorTitles":["deleteCompany"],"failureMessages":[],"fullName":"deleteCompany should return status 404 when removeStock fails","location":null,"status":"passed","title":"should return status 404 when removeStock fails"}],"endTime":1646837665949,"message":"","name":"D:\\src\\FDM06\\stock-service\\src\\controllers\\stockController.test.js","startTime":1646837663907,"status":"passed","summary":""}],"wasInterrupted":false}