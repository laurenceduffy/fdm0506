{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":1,"numPassedTests":11,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":11,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1646825796128,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["updateCardDetails"],"failureMessages":[],"fullName":"updateCardDetails should return status 400 when name is undefined","location":null,"status":"passed","title":"should return status 400 when name is undefined"},{"ancestorTitles":["updateCardDetails"],"failureMessages":[],"fullName":"updateCardDetails should return status 400 when number is undefined","location":null,"status":"passed","title":"should return status 400 when number is undefined"},{"ancestorTitles":["updateCardDetails"],"failureMessages":[],"fullName":"updateCardDetails should return status 400 when expiry is undefined","location":null,"status":"passed","title":"should return status 400 when expiry is undefined"},{"ancestorTitles":["updateCardDetails"],"failureMessages":[],"fullName":"updateCardDetails should return status 400 when cvv is undefined","location":null,"status":"passed","title":"should return status 400 when cvv is undefined"},{"ancestorTitles":["updateCardDetails"],"failureMessages":[],"fullName":"updateCardDetails should call createCardDetails when a non-existing userId is used","location":null,"status":"passed","title":"should call createCardDetails when a non-existing userId is used"},{"ancestorTitles":["updateCardDetails"],"failureMessages":[],"fullName":"updateCardDetails should call editCardDetails when an existing userId is used","location":null,"status":"passed","title":"should call editCardDetails when an existing userId is used"},{"ancestorTitles":["updateCardDetails"],"failureMessages":[],"fullName":"updateCardDetails should return status 200 when a non-existing userId is used","location":null,"status":"passed","title":"should return status 200 when a non-existing userId is used"},{"ancestorTitles":["updateCardDetails"],"failureMessages":[],"fullName":"updateCardDetails should return status 200 when an existing userId is used","location":null,"status":"passed","title":"should return status 200 when an existing userId is used"},{"ancestorTitles":["getCardDetails"],"failureMessages":[],"fullName":"getCardDetails should return status 404 when a non-existing userId is used","location":null,"status":"passed","title":"should return status 404 when a non-existing userId is used"},{"ancestorTitles":["getCardDetails"],"failureMessages":[],"fullName":"getCardDetails should return status 200 when an existing userId is used","location":null,"status":"passed","title":"should return status 200 when an existing userId is used"},{"ancestorTitles":["getCardDetails"],"failureMessages":[],"fullName":"getCardDetails should return body containing card details when an existing userId is used","location":null,"status":"passed","title":"should return body containing card details when an existing userId is used"}],"endTime":1646825797901,"message":"","name":"D:\\src\\FDM06\\verification-service\\src\\controllers\\verificationController.test.js","startTime":1646825796182,"status":"passed","summary":""}],"wasInterrupted":false}